<?xml version="1.0" encoding="utf-8" ?>
<Queries>

  <Paginacao>
    <querySelecionarCount>
      SELECT COUNT(1) FROM ( @MINHAQUERY@ ) C
    </querySelecionarCount>
    <querySelecionarPaginado>
      SET @row_number = 0;
      SELECT * FROM
      (
      SELECT
      (@row_number:=@row_number + 1) AS number, N.* FROM
      (
      @MINHAQUERY@
      ) N
      ) S
      WHERE
      (number BETWEEN @REGISTRO_INICIAL + 1 AND @REGISTRO_INICIAL + @QTD_A_RETORNAR)
    </querySelecionarPaginado>
  </Paginacao>

  <PerfilAcesso>
    <selecionarPerfilAcessoPorCodigo>
      SELECT
        PA.id_Perfil_Acesso,
        PA.nm_Perfil_Acesso,
        PA.moderador
      FROM
        dcccolab.Perfil_Acesso PA
      WHERE
        (PA.id_Perfil_Acesso = @ID)
    </selecionarPerfilAcessoPorCodigo>
    <selecionarPerfisAcessoFiltrados>
      SELECT
        PA.id_Perfil_Acesso, 
        PA.nm_Perfil_Acesso, 
        PA.moderador
      FROM
        dcccolab.Perfil_Acesso PA
      WHERE
        (@FILTRO IS NULL OR PA.nm_Perfil_Acesso LIKE CONCAT('%', @FILTRO, '%'))
      ORDER BY @ORDER_BY
    </selecionarPerfisAcessoFiltrados>
  </PerfilAcesso>
  
  <Usuario>
    <validaUsuarioSenha>
      SELECT
        U.id_Usuario,
        U.id_Facebook,
        U.nm_Usuario,
        U.email,
        PA.id_Perfil_Acesso,
        PA.nm_Perfil_Acesso,
        PA.moderador
      FROM
        dcccolab.Usuario U
        INNER JOIN dcccolab.Perfil_Acesso PA ON PA.id_Perfil_Acesso = U.id_Perfil_Acesso
      WHERE
        U.email = @LOGIN AND
        DES_ENCRYPT(@SENHA) = U.senha
    </validaUsuarioSenha>
    <validaUsuarioFacebook>
      SELECT
        U.id_Usuario,
        U.id_Facebook,
        U.nm_Usuario,
        U.email,
        PA.id_Perfil_Acesso,
        PA.nm_Perfil_Acesso,
        PA.moderador
      FROM
        dcccolab.Usuario U
        INNER JOIN dcccolab.Perfil_Acesso PA ON PA.id_Perfil_Acesso = U.id_Perfil_Acesso
      WHERE
        U.id_Facebook = @ID_FACEBOOK
    </validaUsuarioFacebook>
    <selecionarUsuarioPorCodigo>
      SELECT
        U.id_Usuario,
        U.id_Facebook,
        U.nm_Usuario,
        U.email,
        PA.id_Perfil_Acesso,
        PA.nm_Perfil_Acesso,
        PA.moderador
      FROM
        dcccolab.Usuario U
        INNER JOIN dcccolab.Perfil_Acesso PA ON PA.id_Perfil_Acesso = U.id_Perfil_Acesso
      WHERE
        U.id_Usuario = @ID
    </selecionarUsuarioPorCodigo>
    <selecionarUsuariosFiltrados>
      SELECT
        U.id_Usuario,
        U.id_Facebook,
        U.nm_Usuario,
        U.email,
        PA.id_Perfil_Acesso,
        PA.nm_Perfil_Acesso,
        PA.moderador
      FROM
        dcccolab.Usuario U
        INNER JOIN dcccolab.Perfil_Acesso PA ON PA.id_Perfil_Acesso = U.id_Perfil_Acesso
      WHERE
        (@FILTRO IS NULL OR U.nm_Usuario LIKE CONCAT('%', @FILTRO, '%')) AND
        (@ID_PERFIL IS NULL OR U.id_Perfil_Acesso = @ID_PERFIL)
      ORDER BY @ORDER_BY
    </selecionarUsuariosFiltrados>
    <inserirUsuario>
      INSERT INTO dcccolab.Usuario (nm_Usuario, email, id_Perfil_Acesso, senha) VALUES (@NOME, @EMAIL, @ID_PERFIL, DES_ENCRYPT(@SENHA))
    </inserirUsuario>
    <atualizarUsuario>
      UPDATE dcccolab.Usuario
      SET
        nm_Usuario = @NOME,
        email = @EMAIL,
        id_Perfil_Acesso = @ID_PERFIL
      WHERE
        id_Usuario = @ID
    </atualizarUsuario>
    <excluirUsuario>
      DELETE FROM dcccolab.Usuario WHERE id_Usuario = @ID
    </excluirUsuario>
    <atualizarSenhaUsuario>
      UPDATE dcccolab.Usuario
      SET
        senha = DES_ENCRYPT(@SENHA)
      WHERE
        id_Usuario = @ID
    </atualizarSenhaUsuario>
  </Usuario>

  <Disciplina>
    <selecionarDisciplinaPorCodigo>
      SELECT
        D.id_Disciplina,
        D.nm_Disciplina,
        D.nu_Periodo_Recomendado
      FROM
        dcccolab.Disciplina D
      WHERE
        D.id_Disciplina = @ID
    </selecionarDisciplinaPorCodigo>
    <selecionarDisciplinasFiltradas>
      SELECT
        D.id_Disciplina,
        D.nm_Disciplina,
        D.nu_Periodo_Recomendado
      FROM
        dcccolab.Disciplina D
      WHERE
        (@FILTRO IS NULL OR D.nm_Disciplina LIKE CONCAT('%', @FILTRO, '%'))
      ORDER BY @ORDER_BY
    </selecionarDisciplinasFiltradas>
    <inserirDisciplina>
      INSERT INTO dcccolab.Disciplina (nm_Disciplina, nu_Periodo_Recomendado) VALUES (@NOME, @PERIODO_RECOMENDADO)
    </inserirDisciplina>
    <atualizarDisciplina>
      UPDATE dcccolab.Disciplina
      SET
        nm_Disciplina = @NOME,
        nu_Periodo_Recomendado = @PERIODO_RECOMENDADO
      WHERE
        id_Disciplina = @ID
    </atualizarDisciplina>
    <excluirDisciplina>
      DELETE FROM dcccolab.Disciplina WHERE id_Disciplina = @ID
    </excluirDisciplina>
  </Disciplina>

  <Tema>
    <selecionarTemaPorCodigo>
      SELECT
        T.id_Tema,
        T.nm_Tema,
        T.ds_Tema,
        T.id_Disciplina,
        D.nm_Disciplina
      FROM
        dcccolab.Tema T
        INNER JOIN dcccolab.Disciplina D ON D.id_Disciplina = T.id_Disciplina
      WHERE
        T.id_Tema = @ID
    </selecionarTemaPorCodigo>
    <selecionarTemasFiltrados>
      SELECT
        T.id_Tema,
        T.nm_Tema,
        T.ds_Tema,
        T.id_Disciplina,
        D.nm_Disciplina
      FROM
        dcccolab.Tema T
        INNER JOIN dcccolab.Disciplina D ON D.id_Disciplina = T.id_Disciplina
      WHERE
        (@FILTRO IS NULL OR T.nm_Tema LIKE CONCAT('%', @FILTRO, '%') OR T.ds_Tema LIKE CONCAT('%', @FILTRO, '%')) AND
        (@ID_DISCIPLINA IS NULL OR T.id_Disciplina = @ID_DISCIPLINA)
      ORDER BY @ORDER_BY
    </selecionarTemasFiltrados>
    <inserirTema>
      INSERT INTO dcccolab.Tema (nm_Tema, ds_Tema, id_Disciplina) VALUES (@NOME, @DESCRICAO, @ID_DISCIPLINA)
    </inserirTema>
    <atualizarTema>
      UPDATE dcccolab.Tema
      SET
        nm_Tema = @NOME,
        ds_Tema = @DESCRICAO
      WHERE
        id_Tema = @ID
    </atualizarTema>
    <excluirTema>
      DELETE FROM dcccolab.Tema WHERE id_Tema = @ID
    </excluirTema>
  </Tema>

  <Turma>
    <selecionarTurmaPorCodigo>
      SELECT
        T.id_Turma,
        T.cd_Turma,
        T.nu_Ano,
        T.nu_Semestre,
        T.id_Disciplina,
        D.nm_Disciplina
      FROM
        dcccolab.Turma T
        INNER JOIN dcccolab.Disciplina D ON D.id_Disciplina = T.id_Disciplina
      WHERE
        T.id_Turma = @ID
    </selecionarTurmaPorCodigo>
    <selecionarTurmasFiltradas>
      SELECT
        T.id_Turma,
        T.cd_Turma,
        T.nu_Ano,
        T.nu_Semestre,
        T.id_Disciplina,
        D.nm_Disciplina
      FROM
        dcccolab.Turma T
        INNER JOIN dcccolab.Disciplina D ON D.id_Disciplina = T.id_Disciplina
      WHERE
        (@FILTRO IS NULL OR T.cd_Turma LIKE CONCAT('%', @FILTRO, '%') OR D.nm_Disciplina LIKE CONCAT('%', @FILTRO, '%')) AND
        (@ID_DISCIPLINA IS NULL OR T.id_Disciplina = @ID_DISCIPLINA) AND
        (@ANO IS NULL OR T.nu_Ano = @ANO) AND
        (@SEMESTRE IS NULL OR T.nu_Semestre = @SEMESTRE)
      ORDER BY @ORDER_BY
    </selecionarTurmasFiltradas>
    <inserirTurma>
      INSERT INTO dcccolab.Turma (cd_Turma, nu_Ano, nu_Semestre, id_Disciplina) VALUES (@CODIGO, @ANO, @SEMESTRE, @DISCIPLINA)
    </inserirTurma>
    <atualizarTurma>
      UPDATE dcccolab.Turma
      SET
        cd_Turma = @CODIGO,
        nu_Ano = @ANO,
        nu_Semestre = @SEMESTRE,
        id_Disciplina = @DISCIPLINA
      WHERE
        id_Turma = @ID
    </atualizarTurma>
    <excluirTurma>
      DELETE FROM dcccolab.Turma WHERE id_Turma = @ID
    </excluirTurma>
    
    <selecionarProfessoresPorIdTurma>
      SELECT
        U.id_Usuario,
        U.nm_Usuario
      FROM
        dcccolab.Turma_Professor TP
        INNER JOIN dcccolab.Usuario U ON U.id_Usuario = TP.id_Professor
      WHERE
        TP.id_Turma = @ID_TURMA
      ORDER BY U.nm_Usuario
    </selecionarProfessoresPorIdTurma>
    <selecionarTurmasPorIdProfessor>
      SELECT
        T.id_Turma,
        T.cd_Turma,
        T.nu_Ano,
        T.nu_Semestre,
        T.id_Disciplina,
        D.nm_Disciplina
      FROM
        dcccolab.Turma_Professor TP
        INNER JOIN dcccolab.Turma T ON T.id_Turma = TP.id_Turma
        INNER JOIN dcccolab.Disciplina D on D.id_Disciplina = T.id_Disciplina
      WHERE
        TP.id_Professor = @ID_PROFESSOR
      ORDER BY D.nm_Disciplina
    </selecionarTurmasPorIdProfessor>
    <inserirProfessorTurma>
      INSERT INTO dcccolab.Turma_Professor (id_Turma, id_Professor) VALUES (@ID_TURMA, @ID_PROFESSOR)
    </inserirProfessorTurma>
    <excluirProfessorTurma>
      DELETE FROM dcccolab.Turma_Professor WHERE id_Turma = @ID_TURMA
    </excluirProfessorTurma>
  </Turma>

  <Prova>
    <selecionarProvaPorCodigo>
      SELECT
        P.id_Prova,
        P.src,
        P.titulo,
        P.descricao,
        P.id_Usuario,
        U.nm_Usuario,
        P.id_Turma,
        P.id_Tipo_Prova,
        TP.nm_Tipo_Prova,
        P.aval_Professor,
        P.aval_Monitor,
        AP.nota
      FROM
        dcccolab.Prova P
        INNER JOIN dcccolab.Tipo_Prova TP ON TP.id_Tipo_Prova = P.id_Tipo_Prova
        INNER JOIN dcccolab.Usuario U ON U.id_Usuario = P.id_Usuario
        LEFT JOIN (
          SELECT AVG(nota) As nota, id_Prova FROM dcccolab.Avaliacao_Prova GROUP BY id_Prova
        ) AP ON AP.id_Prova = P.id_Prova
      WHERE
        (P.id_Prova = @ID)
    </selecionarProvaPorCodigo>
    <selecionarProvasFiltradas>
      SELECT DISTINCT
        P.id_Prova,
        P.titulo,
        P.descricao,
        P.id_Usuario,
        U.nm_Usuario,
        P.id_Turma,
        P.id_Tipo_Prova,
        TP.nm_Tipo_Prova,
        P.aval_Professor,
        P.aval_Monitor,
        AP.nota
      FROM
        dcccolab.Prova P
        INNER JOIN dcccolab.Tipo_Prova TP ON TP.id_Tipo_Prova = P.id_Tipo_Prova
        INNER JOIN dcccolab.Usuario U ON U.id_Usuario = P.id_Usuario
        INNER JOIN dcccolab.Turma T ON T.id_Turma = P.id_Turma
        LEFT JOIN dcccolab.Turma_Professor TUP ON TUP.id_Turma = T.id_Turma
        LEFT JOIN dcccolab.Prova_Tema PT ON PT.id_Prova = P.id_Prova
        LEFT JOIN (
          SELECT AVG(nota) As nota, id_Prova FROM dcccolab.Avaliacao_Prova GROUP BY id_Prova
        ) AP ON AP.id_Prova = P.id_Prova
      WHERE
        (@FILTRO IS NULL OR P.descricao LIKE CONCAT('%', @FILTRO, '%')) AND
        (@ID_DISCIPLINA IS NULL OR T.id_Disciplina = @ID_DISCIPLINA) AND
        (@ID_PROFESSOR IS NULL OR TUP.id_Professor = @ID_PROFESSOR) AND
        (@ID_TEMA IS NULL OR PT.id_Tema = @ID_TEMA)
      ORDER BY @ORDER_BY
    </selecionarProvasFiltradas>
    <inserirProva>
      INSERT INTO dcccolab.Prova (src, titulo, descricao, id_Usuario, id_Turma, id_Tipo_Prova, aval_Professor, aval_Monitor) VALUES (@SRC, @TITULO, @DESCRICAO, @ID_USUARIO, @ID_TURMA, @ID_TIPO_PROVA, 0, 0)
    </inserirProva>
    <atualizarProva>
      UPDATE dcccolab.Prova 
      SET
        titulo = @TITULO,
        descricao = @DESCRICAO,
        id_Turma = @ID_TURMA,
        id_Tipo_Prova = @ID_TIPO_PROVA
      WHERE 
        id_Prova = @ID
    </atualizarProva>
    <excluirProva>
      DELETE FROM dcccolab.Prova WHERE id_Prova = @ID
    </excluirProva>

    <selecionarTiposProva>
      SELECT
        TP.id_Tipo_Prova,
        TP.nm_Tipo_Prova
      FROM
        dcccolab.Tipo_Prova TP
    </selecionarTiposProva>

    <selecionarTemasPorIdProva>
      SELECT
        PT.id_Tema,
        T.nm_Tema,
        T.ds_Tema,
        T.id_Disciplina,
        D.nm_Disciplina
      FROM
        dcccolab.Prova_Tema PT
        INNER JOIN dcccolab.Tema T ON T.id_Tema = PT.id_Tema
        INNER JOIN dcccolab.Disciplina D ON D.id_Disciplina = T.id_Disciplina
      WHERE
        (PT.id_Prova = @ID_PROVA)
      ORDER BY T.nm_Tema ASC
    </selecionarTemasPorIdProva>
    <inserirTemaProva>
      INSERT INTO dcccolab.Prova_Tema (id_Prova, id_Tema) VALUES (@ID_PROVA, @ID_TEMA)
    </inserirTemaProva>
    <excluirTemaProva>
      DELETE FROM dcccolab.Prova_Tema WHERE id_Prova = @ID_PROVA
    </excluirTemaProva>

    <selecionarAvaliacaoProvaPorIds>
      SELECT
        AP.id_Prova,
        AP.id_Usuario,
        AP.nota
      FROM
        dcccolab.Avaliacao_Prova AP
      WHERE
        (AP.id_Prova = @ID_PROVA) AND
        (AP.id_Usuario = @ID_USUARIO)
    </selecionarAvaliacaoProvaPorIds>
    <salvarAvaliacaoProva>
      INSERT INTO dcccolab.Avaliacao_Prova (id_Usuario, id_Prova, nota)
        VALUES (@ID_USUARIO, @ID_PROVA, @NOTA)
      ON DUPLICATE KEY 
        UPDATE nota=@NOTA
    </salvarAvaliacaoProva>
  </Prova>

  <Link>
    <selecionarLinkPorCodigo>
      SELECT
        L.id_Link,
        L.url,
        L.titulo,
        L.descricao,
        L.id_Usuario,
        U.nm_Usuario,
        L.id_Disciplina,
        D.nm_Disciplina,
        L.id_Tipo_Link,
        TL.nm_Tipo_Link,
        L.aval_Professor,
        L.aval_Monitor,
        AL.nota
      FROM
        dcccolab.Link L
        INNER JOIN dcccolab.Tipo_Link TL ON TL.id_Tipo_Link = L.id_Tipo_Link
        INNER JOIN dcccolab.Disciplina D ON D.id_Disciplina = L.id_Disciplina
        INNER JOIN dcccolab.Usuario U ON U.id_Usuario = L.id_Usuario
        LEFT JOIN (
          SELECT AVG(nota) As nota, id_Link FROM dcccolab.Avaliacao_Link GROUP BY id_Link
        ) AL ON AL.id_Link = L.id_Link
      WHERE
        (L.id_Link = @ID)
    </selecionarLinkPorCodigo>
    <selecionarLinksFiltrados>
      SELECT DISTINCT
        L.id_Link,
        L.url,
        L.titulo,
        L.descricao,
        L.id_Usuario,
        U.nm_Usuario,
        L.id_Disciplina,
        D.nm_Disciplina,
        L.id_Tipo_Link,
        TL.nm_Tipo_Link,
        L.aval_Professor,
        L.aval_Monitor,
        AL.nota
      FROM
        dcccolab.Link L
        INNER JOIN dcccolab.Tipo_Link TL ON TL.id_Tipo_Link = L.id_Tipo_Link
        INNER JOIN dcccolab.Disciplina D ON D.id_Disciplina = L.id_Disciplina
        INNER JOIN dcccolab.Usuario U ON U.id_Usuario = L.id_Usuario
        LEFT JOIN dcccolab.Turma T ON T.id_Disciplina = D.id_Disciplina
        LEFT JOIN dcccolab.Turma_Professor TUP ON TUP.id_Turma = T.id_Turma
        LEFT JOIN dcccolab.Link_Tema LT ON LT.id_Link = L.id_Link
        LEFT JOIN (
          SELECT AVG(nota) As nota, id_Link FROM dcccolab.Avaliacao_Link GROUP BY id_Link
        ) AL ON AL.id_Link = L.id_Link
      WHERE
        (@FILTRO IS NULL OR L.descricao LIKE CONCAT('%', @FILTRO, '%')) AND
        (@ID_DISCIPLINA IS NULL OR L.id_Disciplina = @ID_DISCIPLINA) AND
        (@ID_TEMA IS NULL OR LT.id_Tema = @ID_TEMA) AND
        (@ID_PROFESSOR IS NULL OR TUP.id_Professor = @ID_PROFESSOR)
      ORDER BY @ORDER_BY
    </selecionarLinksFiltrados>
    <inserirLink>
      INSERT INTO dcccolab.Link (url, titulo, descricao, id_Usuario, id_Disciplina, id_Tipo_Link, aval_Professor, aval_Monitor) VALUES (@URL, @TITULO, @DESCRICAO, @ID_USUARIO, @id_Disciplina, @ID_TIPO_LINK, 0, 0)
    </inserirLink>
    <atualizarLink>
      UPDATE dcccolab.Link
      SET
        titulo = @TITULO,
        descricao = @DESCRICAO,
        id_Disciplina = @ID_DISCIPLINA,
        id_Tipo_Link = @ID_TIPO_LINK
      WHERE
        id_Link = @ID
    </atualizarLink>
    <excluirLink>
      DELETE FROM dcccolab.Link WHERE id_Link = @ID
    </excluirLink>

    <selecionarTiposLink>
      SELECT
        TL.id_Tipo_Link,
        TL.nm_Tipo_Link
      FROM
        dcccolab.Tipo_Link TL
    </selecionarTiposLink>

    <selecionarTemasPorIdLink>
      SELECT
        LT.id_Tema,
        T.nm_Tema,
        T.ds_Tema,
        T.id_Disciplina,
        D.nm_Disciplina
      FROM
        dcccolab.Link_Tema LT
        INNER JOIN dcccolab.Tema T ON T.id_Tema = LT.id_Tema
        INNER JOIN dcccolab.Disciplina D ON D.id_Disciplina = T.id_Disciplina
      WHERE
        (LT.id_Link = @ID_LINK)
      ORDER BY T.nm_Tema ASC
    </selecionarTemasPorIdLink>
    <inserirTemaLink>
      INSERT INTO dcccolab.Link_Tema (id_Link, id_Tema) VALUES (@ID_LINK, @ID_TEMA)
    </inserirTemaLink>
    <excluirTemaLink>
      DELETE FROM dcccolab.Link_Tema WHERE id_Link = @ID_LINK
    </excluirTemaLink>

    <selecionarAvaliacaoLinkPorIds>
      SELECT
        AL.id_Link,
        AL.id_Usuario,
        AL.nota
      FROM
        dcccolab.Avaliacao_Link AL
      WHERE
        (AL.id_Link = @ID_LINK) AND
        (AL.id_Usuario = @ID_USUARIO)
    </selecionarAvaliacaoLinkPorIds>
    <salvarAvaliacaoLink>
      INSERT INTO dcccolab.Avaliacao_Link (id_Usuario, id_Link, nota)
        VALUES (@ID_USUARIO, @ID_LINK, @NOTA)
      ON DUPLICATE KEY
        UPDATE nota=@NOTA
    </salvarAvaliacaoLink>
  </Link>
  
</Queries>