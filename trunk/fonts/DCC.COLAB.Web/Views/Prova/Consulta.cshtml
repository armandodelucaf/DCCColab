@using DCC.COLAB.Common.AuxiliarEntities;
@using DCC.COLAB.Common.Entities;

@{
    List<TipoProva> listaTipos = Convert.ChangeType(ViewBag.listaTipos, typeof(List<TipoProva>));
    List<Disciplina> listaDisciplinas = Convert.ChangeType(ViewBag.listaDisciplinas, typeof(List<Disciplina>));
    List<Usuario> listaProfessores = Convert.ChangeType(ViewBag.listaProfessores, typeof(List<Usuario>));
}

<div>
    <legend>Provas - Consulta</legend>

    <table id="tabelaProvas" class="table hover table-bordered" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th>Id</th>
                <th>Título</th>
                <th>Tipo</th>
                <th>Turma</th>
                <th>Ações</th>
            </tr>
        </thead>
    </table>

    <div class="form-group">
        <div>
            <button id="btnNovo" name="btnNovo" class="btn btn-primary">Nova prova</button>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="cadastroDeProva" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="modalProvaLabel"></h4>
            </div>
            <div class="modal-body" style="overflow-y: inherit !important;">
                <form>
                    <input type="hidden" id="hdIdProva" value="" />
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="txtTitulo" class="control-label">Título:</label>
                                <input id="txtTitulo" name="txtTitulo" type="text" placeholder="Título da prova" class="form-control input-md" value="" />
                            </div>
                        </div>
                    </div>
                    <div class="row" id="divInputProva">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="inputProvas" class="control-label">Prova:</label>
                                <input id="inputProvas" type="file" class="file" accept="application/pdf" data-show-preview="false" data-show-upload="false" required />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="txtDescricao" class="control-label">Descrição:</label>
                                <textarea id="txtDescricao" name="txtDescricao" placeholder="Descrição da prova" class="form-control input-md"></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="selectTipo" class="control-label">Tipo:</label>
                                <select id="selectTipo" class="form-control input-md" required>
                                    <option value="0">Selecione um tipo</option>
                                    @foreach (TipoProva tipo in listaTipos)
                                    {
                                        <option value="@tipo.id">@tipo.nome</option>
                                    }                                    
                                </select>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="form-group">
                                <label for="selectDisciplina" class="control-label">Disciplina:</label>
                                <select id="selectDisciplina" class="form-control input-md" onchange="DisciplinaAlterada()" required>
                                    <option value="0">Selecione uma Disciplina</option>
                                    @foreach (Disciplina disciplina in listaDisciplinas) {
                                        <option value="@disciplina.id">@disciplina.nome</option>
                                    }                                    
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="selectProfessor" class="control-label">Professor:</label>
                                 <select id="selectProfessor" class="form-control input-md selectpicker" multiple required>
                                    @foreach (Usuario professor in listaProfessores) {
                                        <option value="@professor.id">@professor.nome</option>
                                    }                                    
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="selectAno" class="control-label">Ano:</label>
                                <select id="selectAno" class="form-control input-md" required>
                                    <option value="0">Selecione um ano</option>
                                    @for (int i = 2000; i < 2017; i++)
                                    {
                                        <option value="@i">@(i)</option>
                                    }                                    
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="selectSemestre" class="control-label">Semestre:</label>
                                <select id="selectSemestre" class="form-control input-md" required>
                                    <option value="1">1</option>
                                    <option value="2">2</option>                                
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">

                            <input id="hdTemas" name="hdTemas" type="hidden" value="" />

                            <div class="form-group ui-front">
                                <label for="temasProva" class="control-label">Temas:</label>
                                <textarea id="temasProva" name="temasProva" placeholder="Digite aqui os temas para associar a esta prova" class="form-control input-md"></textarea>
                            </div>
                        </div>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                <button type="button" class="btn btn-success" id="btnSalvar">Salvar prova</button>
            </div>
        </div>
    </div>
</div>


@section scripts
{
    <script type="text/javascript">
        var CarregarProvaParaEdicao = function (idProva) {
            SRV.ChamarAjax('@Url.Action("ObterProva", "Prova")', { codigo: idProva }, CarregarProvaParaEdicao_cb);
        };

        var CarregarProvaParaEdicao_cb = function (json) {
            $('#modalProvaLabel').text('Editar Prova');
            $("#hdIdProva").val(json.id);
            $('#txtTitulo').val(json.titulo);
            $('#txtDescricao').val(json.descricao);
            $('#selectTipo').val(json.tipo.id);
            $('#inputProvas').fileinput('reset');
            
            $('#selectAno').val(json.turma.periodo.ano);
            $('#selectSemestre').val(json.turma.periodo.semestre);
            $('#selectProfessor').selectpicker('val', json.turma.listaProfessores.map(function (x) { return x.id }));

            $('#selectDisciplina').val(json.turma.disciplina.id);
            $('#selectDisciplina').prop('disabled', true);

            $("#hdTemas").val(JSON.stringify(json.temasAssociados));
            if (json.temasAssociados.length > 0) {
                var temas = JSON.parse($('#hdTemas').val());
                var txtTemas = []
                for (i = 0; i < temas.length; i++) {
                    txtTemas.push(temas[i].nome);
                }
                $('#temasProva').val(txtTemas.join(", "));
            }
            else {
                $('#temasProva').val('');
            }
            ObterTemas(json.turma.disciplina.id);

            $('#divInputProva').addClass('hide');
            $('#cadastroDeProva').modal();
        };

        var DisciplinaAlterada = function () {
            var idDisciplina = parseInt($('#selectDisciplina').val());

            $("#hdTemas").val('');
            $('#temasProva').val('');

            if (idDisciplina > 0) {
                ObterTemas(idDisciplina);
            }
        };

        var ObterTemas = function (idDisciplina) {
            SRV.ChamarAjax('@Url.Action("ObterTemas", "Prova")', { idDisciplina: idDisciplina }, ObterTemas_cb);
        }

        var split = function (val) {
            return val.split(/,\s*/);
        }

        var extractLast = function (term) {
            return split(term).pop();
        }

        var ObterTemas_cb = function (json) {
            var dataSet = $.map(json, function (value, index) {
                return { value: value.id, label: value.nome };
            });

            $('#temasProva').autocomplete({
                minLength: 0,
                source: function (request, response) {
                    // delegate back to autocomplete, but extract the last term
                    response($.ui.autocomplete.filter(dataSet, extractLast(request.term)));
                },
                focus: function () {
                    // prevent value inserted on focus
                    return false;
                },
                select: function (event, ui) {
                    var temas = split(this.value);
                    // remove the current input
                    temas.pop();
                    // add the selected item
                    temas.push(ui.item.label);
                    // add placeholder to get the comma-and-space at the end
                    temas.push("");
                    this.value = temas.join(", ");

                    metrics = jQuery.grep(dataSet, function (element) {
                        return element.label != ui.item.label;
                    });

                    return false;
                },
                change: function (event, ui) {
                    var temas = split(this.value);
                    if (temas[temas.length - 1] === '') {
                        temas.pop();
                    }

                    var uniqueTemas = temas.filter(function (item, pos, self) {
                        return self.indexOf(item) == pos;
                    })
                    temas = uniqueTemas;

                    var temasObj = [];

                    $.each(temas, function (index, value) {
                        temaEncontrado = dataSet.filter(function (tag) { return tag.label.toUpperCase() == value.toUpperCase() })
                        if (temaEncontrado.length > 0) {
                            temasObj.push({ nome: temaEncontrado[0].label.toUpperCase(), id: temaEncontrado[0].value });
                        }
                    });
                    $('#hdTemas').val(JSON.stringify(temasObj));
                }
            });
        };

        $('#btnSalvar').click(function () {
            var id = parseInt($("#hdIdProva").val());
            if (id == 0) {
                SalvarInsercao();
            }
            else {
                SalvarEdicao(id);
            }
        });

        var SalvarEdicao = function (id) {
            var titulo = $.trim($('#txtTitulo').val());
            var descricao = $.trim($('#txtDescricao').val());
            var tipo = parseInt($('#selectTipo').val());
            var disciplina = parseInt($('#selectDisciplina').val());
            var ano = parseInt($('#selectAno').val());
            var semestre = parseInt($('#selectSemestre').val());
            var professores = $('#selectProfessor').selectpicker('val');
            var temas = $.trim($("#hdTemas").val());

            if (!tipo) {
                Msg.error('O campo "Tipo" é obrigatório. Favor verificar a seleção do mesmo.', 4000);
            }
            else if (!disciplina) {
                Msg.error('O campo "Disciplina" é obrigatório. Favor verificar a seleção do mesmo.', 4000);
            }
            else if (!ano) {
                Msg.error('O campo "Ano" é obrigatório. Favor verificar a seleção do mesmo.', 4000);
            }
            else if (!semestre) {
                Msg.error('O campo "Semestre" é obrigatório. Favor verificar a seleção do mesmo.', 4000);
            }
            else if (!professores) {
                Msg.error('O campo "Professor" é obrigatório. Favor verificar a seleção do mesmo.', 4000);
            }
            else {
                var params = {
                    'id': id,
                    'titulo': titulo,
                    'descricao': descricao,
                    'tipo': { 'id': tipo, 'nome': $('#selectTipo option:selected').text() },
                    'turma': {
                        'disciplina': { 'id': disciplina, 'nome': $('#selectDisciplina option:selected').text() },
                        'periodo': { 'ano': ano, 'semestre': semestre },
                        'listaProfessores': []
                    }
                }

                if (temas) {
                    params.temasAssociados = JSON.parse(temas);
                }

                for (var i = 0; i < professores.length; i++) {
                    var option = { 'id': professores[i] };
                    params.turma.listaProfessores.push(option);
                }

                var formData = new FormData();
                formData.append("prova", JSON.stringify(params));
                SRV.ChamarHttpRequest('@Url.Action("Salvar", "Prova")', formData, Salvar_cb);
            }
        };

        var ExcluirProva = function (idProva) {
            $.confirm({
                title: "Confirmação",
                text: "Deseja realmente excluir esta prova?",
                confirm: function () {
                    ExcluirProvaAjax(idProva);
                },
                cancel: function () {
                    // nothing to do
                },
                confirmButton: "Sim",
                cancelButton: "Não",
                post: true
            });
        };

        var ExcluirProvaAjax = function (id) {
            SRV.ChamarAjax('@Url.Action("Excluir", "Prova")', { codigo: id }, SucessoExcluir_cb);
        };

        var SucessoExcluir_cb = function (json) {
            Msg.success("Exclusão realizada com sucesso.", 3000);
            AtualizarListagem();
        };

        var AtualizarListagem = function () {
            $('#tabelaProvas').dataTable().fnDraw(false);
        };
        
        var InicializarListagem = function () {
            $('#tabelaProvas').dataTable({
                columns: [
                    { "data": "id", "name": "P.id_Prova" },
                    { "data": "titulo", "name": "P.titulo" },
                    { "data": "tipo.nome", "name": "TP.nm_Tipo_Prova" },
                    { "data": "turma.tableString" },
                    { "data": "" }
                ],
                columnDefs: [
                    { targets: 0, visible: false, orderable: false, searchable: false },
                    { targets: 3, orderable: false },
                    {
                        targets: 4, orderable: false, searchable: false, width: "80px", sClass: "alignCenter", render: function (data, type, row) {
                            var acoes = "";
                            acoes += "<a href='#' onClick='VisualizarPDF(" + row["id"] + ")'><img width='15px' title='visualizar pdf' alt='Visualizar PDF' src='/../Content/img/pdf.jpg' class='rowConfigureIcon'/></a>";
                            acoes += "&nbsp;&nbsp;";
                            acoes += "<a href='#' onClick='CarregarProvaParaEdicao(" + row["id"] + ")'><img width='15px' title='editar' alt='Editar' src='/../Content/img/ic_editar.png' class='rowEditIcon'/></a>";
                            acoes += "&nbsp;&nbsp;";
                            acoes += "<a href='#' onClick='ExcluirProva(" + row["id"] + ")'><img width='15px' title='excluir' alt='Excluir' src='/../Content/img/bt_excluir.gif' class='rowDeleteIcon' id='" + row["id"] + "'/></a>";
                            return acoes;
                        }
                    },
                ],
                language: { url: "/../Content/dataTable_pt_BR.js", searchPlaceholder: "titulo" },
                processing: true,
                serverSide: true,
                order: [[1, "asc"]],
                ajax: {
                    url: "@Url.Action("ListarProvas", "Prova")",
                    async: false,
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: function (d) {
                        return COLAB.ObterFiltroBaseDataTable(d);
                    }
                }
            });
        };

        $('#btnNovo').click(function () {
            $('#modalProvaLabel').text('Cadastrar Nova Prova');
            $("#hdIdProva").val(0);
            $('#txtTitulo').val("");
            $('#txtDescricao').val("");
            $('#selectTipo').val(0);
            $('#inputProvas').fileinput('reset');

            $('#selectAno').val(0);
            $('#selectSemestre').val(1);
            $('#selectProfessor').selectpicker('val', null);
            $('#selectDisciplina').val(0);
            $('#selectDisciplina').prop('disabled', false);

            $("#hdTemas").val("");
            $('#temasProva').val("");

            $('#divInputProva').removeClass('hide');
            $('#cadastroDeProva').modal();
        });

        var SalvarInsercao = function () {
            var titulo = $.trim($('#txtTitulo').val());
            var descricao = $.trim($('#txtDescricao').val());
            var tipo = parseInt($('#selectTipo').val());
            var disciplina = parseInt($('#selectDisciplina').val());
            var ano = parseInt($('#selectAno').val());
            var semestre = parseInt($('#selectSemestre').val());
            var professores = $('#selectProfessor').selectpicker('val');
            var arquivos = $('input[type=file]')[0].files;
            var temas = $.trim($("#hdTemas").val());

            if (arquivos.length == 0) {
                Msg.error('O campo "Prova" é obrigatório. Favor verificar a seleção do arquivo.', 4000);
            }
            else if (!tipo) {
                Msg.error('O campo "Tipo" é obrigatório. Favor verificar a seleção do mesmo.', 4000);
            }
            else if (!disciplina) {
                Msg.error('O campo "Disciplina" é obrigatório. Favor verificar a seleção do mesmo.', 4000);
            }
            else if (!ano) {
                Msg.error('O campo "Ano" é obrigatório. Favor verificar a seleção do mesmo.', 4000);
            }
            else if (!semestre) {
                Msg.error('O campo "Semestre" é obrigatório. Favor verificar a seleção do mesmo.', 4000);
            }
            else if (!professores) {
                Msg.error('O campo "Professor" é obrigatório. Favor verificar a seleção do mesmo.', 4000);
            }
            else {
                var params = {
                    'titulo': titulo,
                    'descricao': descricao,
                    'tipo': { 'id': tipo, 'nome': $('#selectTipo option:selected').text() },
                    'turma': {
                        'disciplina': { 'id': disciplina, 'nome': $('#selectDisciplina option:selected').text() },
                        'periodo': { 'ano': ano, 'semestre': semestre },
                        'listaProfessores': []
                    }
                }

                if (temas) {
                    params.temasAssociados = JSON.parse(temas);
                }

                for (var i = 0; i < professores.length; i++) {
                    var option = { 'id': professores[i] };
                    params.turma.listaProfessores.push(option);
                }

                var formData = new FormData();
                formData.append("prova", JSON.stringify(params));
                formData.append("file", arquivos[0]);
                SRV.ChamarHttpRequest('@Url.Action("Salvar", "Prova")', formData, Salvar_cb);
            }
        };

        var Salvar_cb = function (json) {
            Msg.success('Cadastro efetuado com sucesso', 4000);
            $('#cadastroDeProva').modal('hide');
            AtualizarListagem();
        };

        var VisualizarPDF = function (idProva) {
            if (idProva) {
                var url = '@Url.Action("VisualizarPDF", "Prova")' + '/' + idProva;
                window.open(url, "_blank");
            }
        };

        var VisualizarPDF_cb = function (json) {
            window.open("data:application/pdf;base64, " + json.srcBase64);
        };

        $(document).ready(function () {
            Msg.iconMode = "fa";
            InicializarListagem();
            COLAB.InicializarPropriedades();
        });
    </script>
}