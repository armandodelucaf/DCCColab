@using DCC.COLAB.Web.Util;
@using DCC.COLAB.Common.Basic;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>DCC COLAB</title>

    <script type="text/javascript">
        var siteRoot = '@ViewData["siteRoot"]';
    </script>

    <link href="~/Content/img/ic_dcc.png" rel="shortcut icon" type="image/x-icon" />
    <meta name="viewport" content="width=device-width" />

    @Styles.Render("~/Content/css/font-awesome.min.css")

    @Styles.Render("~/Content/css/bootstrap/bootstrap.min.css")
    @Styles.Render("~/Content/css/bootstrap/bootstrap-theme.min.css")
    @Styles.Render("~/Content/css/bootstrap/sticky-footer.css")
    @Styles.Render("~/Content/css/bootstrap/bootstrap-msg.css")
    @Styles.Render("~/Content/css/bootstrap/dataTables.bootstrap.css")
    @Styles.Render("~/Content/css/bootstrap/fileinput.min.css")
    @Styles.Render("~/Content/css/bootstrap/bootstrap-datepicker.css")
    @Styles.Render("~/Content/css/bootstrap/bootstrap-select.min.css")
    @Styles.Render("~/Content/css/bootstrap/bootstrap-tagsinput.css")
    @Styles.Render("~/Content/css/jquery.datetimepicker.css")
    @Styles.Render("~/Content/css/jquery.Jcrop.min.css")

    @Styles.Render("~/Content/css/cms.css")
    @Styles.Render("~/Content/themes/base/all.css")

    @Scripts.Render("~/Content/js/jquery/jquery-1.11.2.min.js")
    @Scripts.Render("~/Content/js/jquery/jquery-ui-1.11.3.min.js")
    @Scripts.Render("~/Content/js/jquery/jquery.sortable.min.js")
    @Scripts.Render("~/Content/js/jquery/jquery.confirm.min.js")
    @Scripts.Render("~/Content/js/jquery/jquery.dataTables.min.js")
    @Scripts.Render("~/Content/js/jquery/ajaxfileupload.js")
    @Scripts.Render("~/Content/js/jquery/jquery.mask.min.js")
    @Scripts.Render("~/Content/js/jquery/jquery.blockUI.js")

    @Scripts.Render("~/Content/js/jquery/jquery.datetimepicker.js")
    @Scripts.Render("~/Content/js/jquery/jquery.inputmask.bundle.min.js")
    @Scripts.Render("~/Content/js/bootstrap/dataTables.bootstrap.js")
    @Scripts.Render("~/Content/js/bootstrap/bootstrap-msg.js")
    @Scripts.Render("~/Content/js/bootstrap/bootstrap.min.js")
    @Scripts.Render("~/Content/js/bootstrap/fileinput.min.js")
    @Scripts.Render("~/Content/js/bootstrap/bootstrap-select.min.js")
    @Scripts.Render("~/Content/js/bootstrap/i18n/defaults-pt_BR.min.js")
    @Scripts.Render("~/Content/js/bootstrap/typeahead.bundle.min.js")
    @Scripts.Render("~/Content/js/bootstrap/datepicker/bootstrap-datepicker.js")
    @Scripts.Render("~/Content/js/bootstrap/datepicker/bootstrap-datepicker.pt-BR.js")
    @Scripts.Render("~/Content/js/ckeditor/ckeditor.js")
    @Scripts.Render("~/Content/js/bootstrap/pagination/jquery.twbsPagination.js")
    @Scripts.Render("~/Content/js/swfobject.js")
    @Scripts.Render("~/Content/js/jquery/jquery.Jcrop.min.js")

    @Scripts.Render("~/Content/js/cms/cms.js")
    @Scripts.Render("~/Content/js/cms/paginacao.js")
    @Scripts.Render("~/Content/js/cms/galeria.js")
    @Scripts.Render("~/Content/js/cms/mascara.js")
    @Scripts.Render("~/Content/js/base64-binary.js")
    @Scripts.Render("~/Content/js/facebookImageUpload.js")
    @Scripts.Render("~/Content/js/pdfobject.js")
    @Scripts.Render("~/Content/js/cms/servidor.js")
</head>

@RenderSection("styles", required: false)

<body>
    <div id="fb-root"></div>
    <script>

        // Load the SDK asynchronously
        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/pt_BR/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));

        function CarregarModalProva() {
            SRV.ChamarAjaxView('@Url.Action("Modal", "Prova")', null, CarregarModalProva_cb);
        }

        function CarregarModalProva_cb(data) {
            var expr = new RegExp('>[ \t\r\n\v\f]*<', 'g');
            $('#provaModalDivContainer').html(data.replace(expr, '><'));
            ProvaModal.Abrir();
        };

        function CarregarModalLink() {
            SRV.ChamarAjaxView('@Url.Action("Modal", "Link")', null, CarregarModalLink_cb);
        }

        function CarregarModalLink_cb(data) {
            var expr = new RegExp('>[ \t\r\n\v\f]*<', 'g');
            $('#linkModalDivContainer').html(data.replace(expr, '><'));
            LinkModal.Abrir();
        };

        // This is called with the results from from FB.getLoginStatus().
        function statusChangeCallback(response) {
            console.log('statusChangeCallback');
            console.log(response);
            // The response object is returned with a status field that lets the
            // app know the current login status of the person.
            // Full docs on the response object can be found in the documentation
            // for FB.getLoginStatus().
            if (response.status === 'connected') {
                // Logged into your app and Facebook.
                @if (!SessaoUtil.UsuarioEstaAutenticado) {
                    @: connectedAPI();
                }
            } else if (response.status === 'not_authorized') {
                // The person is logged into Facebook, but not your app.
                @if (SessaoUtil.UsuarioEstaAutenticado) {
                    @: SRV.ChamarAjax('@Url.Action("Logout", "Login")', null, connectedAPI_cb);
                }
            } else {
                // The person is not logged into Facebook, so we're not sure if
                // they are logged into this app or not.
                @if (SessaoUtil.UsuarioEstaAutenticado) {
                    @: SRV.ChamarAjax('@Url.Action("Logout", "Login")', null, connectedAPI_cb);
                }
            }
        }

        // This function is called when someone finishes with the Login
        // Button.  See the onlogin handler attached to it in the sample
        // code below.
        function checkLoginState() {
            FB.getLoginStatus(function (response) {
                statusChangeCallback(response);
            });
        }

        window.fbAsyncInit = function () {
            FB.init({
                //appId: '251309015074551', //produção
                appId: '424317664440351', //desenvolvimento
                cookie: true,  // enable cookies to allow the server to access 
                // the session
                xfbml: true,  // parse social plugins on this page
                version: 'v2.2' // use version 2.2
            });

            // Now that we've initialized the JavaScript SDK, we call 
            // FB.getLoginStatus().  This function gets the state of the
            // person visiting this page and can return one of three states to
            // the callback you provide.  They can be:
            //
            // 1. Logged into your app ('connected')
            // 2. Logged into Facebook, but not your app ('not_authorized')
            // 3. Not logged into Facebook and can't tell if they are logged into
            //    your app or not.
            //
            // These three cases are handled in the callback function.

            FB.getLoginStatus(function (response) {
                statusChangeCallback(response);
            });
        };

        function connectedAPI() {
            FB.api('/me', function (response) {
                var params = {
                    'idFacebook': response.id,
                    'nome': response.name,
                    'email': response.email
                }

                SRV.ChamarAjax('@Url.Action("ValidarLoginFacebook", "Login")', params, connectedAPI_cb);
            });
        }

        var connectedAPI_cb = function (json) {
            if (json.isRedirect) {
                window.location.href = json.redirectURL;
            }
            else {
                window.location.reload();
            }
        };

        COLAB.InicializarPropriedades();
    </script>

    <div id="provaModalDivContainer">
    </div>

    <div id="linkModalDivContainer">
    </div>

    <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
        <div class="container">
            <div class="navbar-header" style="min-width: 170px;">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a href="~/Home/Index">
                    <img src="~/Content/img/ic_dcc_pb.png" style="height:40px;"/>
                    <img src="~/Content/img/txt_dcc_pb.png" style="float: right"/>
                </a>
            </div>
            <div id="navbar" class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li><a href="@Url.Action("Index", "Home")">Home</a></li>

                    @if (SessaoUtil.UsuarioEstaAutenticado && SessaoUtil.Usuario.perfilAcesso.perfilModerador)
                    { 
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Administração<span class="caret"></span></a>
                        <ul class="dropdown-menu" role="menu">
                            <li><a href="@Url.Action("Consulta", "Disciplina")">Disciplinas</a></li>
                            <li><a href="@Url.Action("Consulta", "Link")">Links</a></li>
                            <li><a href="@Url.Action("Consulta", "Notificacao")">Notificações</a></li>
                            <li><a href="@Url.Action("Consulta", "Prova")">Provas</a></li>
                            <li><a href="@Url.Action("Consulta", "Tema")">Temas</a></li>
                            <li><a href="@Url.Action("Consulta", "Turma")">Turmas</a></li>
                            <li><a href="@Url.Action("Consulta", "Usuario")">Usuários</a></li>
                        </ul>
                    </li>
                    }

                    @if (SessaoUtil.UsuarioEstaAutenticado)
                    { 
                        <li><a href="#" onclick="CarregarModalProva()">Enviar Prova</a></li>
                        <li><a href="#" onclick="CarregarModalLink()">Enviar Material de Apoio</a></li>
                    }

                    <li><a href="#" onclick="AboutModal.Abrir()">Sobre o projeto</a></li>
                    
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    @if (SessaoUtil.UsuarioEstaAutenticado)
                    { 
                        <li><p style="font-weight:bolder;" class="navbar-text">Olá, @SessaoUtil.Usuario.nome</p></li>
                    }
                    <li>
                        <fb:login-button scope="public_profile,email" data-auto-logout-link="true" style="margin-top: 15px;" onlogin="checkLoginState();">
                        </fb:login-button>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div id="messages"></div>
    <div class="jumbotron">
        <section class="content-wrapper main-content clear-fix">
            @RenderBody()
        </section>
    </div>

</body>

<footer class="footer">
    <div class="container">
        <p class="text-muted legal">© Copyright 2016 - Armando De Luca Filho e Hugo Santos Nascimento - Todos os direitos reservados.</p>
    </div>
</footer>

</html>

@RenderSection("scripts", required: false)
